1. libsvm数据格式例子：
    8 9219:0.24673737883635047 453:0.09884635754820137 10322:0.21501394457319623 11947:0.27282495932970074 6459:0.41385272697452935 46:0.24041607991272138 8987:0.14897255497578704 4719:0.22296154731520754 10094:0.13116443653818177 5162:0.17050804524212404 2419:0.11831944042647048 11484:0.3501901869096251 12040:0.13267440708284894 8745:0.5320327758892881 9048:0.11445287153209653 1989:0.04677087098649205 7102:0.11308242956243426 3862:0.12007217405755069 10417:0.09796211412332205 5729:0.148037967054332 11796:0.08409157900442304 9094:0.17368658217203461 3452:0.1513474608736807 3955:0.0656773581702849 6228:0.4356889927309336 5299:0.15060439516792662 3505:0.14379243687841153 10732:0.9593462052245719 9659:0.1960034406311122 8545:0.22597403804274924 6767:0.13871522631066047 8566:0.20352452713417019 3546:0.1136541497082903 6309:0.10475466997804883 10256:0.26416957780238604 10288:0.22549409383630933 第一列的8表示类别编号，其余的每一列是词及其权重，使用冒号分隔，例如“9219:0.24673737883635047”表示编号为9219的词，对应的TF-IDF值为0.24673737883635047。
   常用接口：
        svm_train()        : train an SVM model.
        svm_predict()      : predict testing data.
        svm_read_problem() : read the data from a LIBSVM-format file.
        svm_load_model()   : load a LIBSVM model.
        svm_save_model()   : save model to a file.
        evaluations()      : evaluate prediction results.
2. 考虑TF-IDF来进行model中特征向量的量化，其中tf为词频，idf为逆向文件频率：
    TF(i,j) = n(i,j)/sum{n(k,j) for any k} #词频
    IDF(i) = log(|D|/|{j:t(j) in d(j)|) #逆向文件频率，即包含该词的文件占总文件的比率
    上面IDF(i)计算中为了避免分母为零，通常将分母换成1+|{j:t(j) in d(j)|
    TF-IDF(i,j) = TF(i,j)*IDF(i)
    在实现过程中可以考虑将文件类比成不同的实体关系类别来分析
3. 其他
